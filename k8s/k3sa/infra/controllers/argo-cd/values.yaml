crds:
  install: false
server:
  service:
    type: LoadBalancer
    loadBalancerIP: 10.0.0.59
  ingress:
    enabled: true
    controller: generic
    ingressClassName: traefik
    annotations:
      kubernetes.io/ingress.class: traefik
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/router.middlewares: traefik-default-headers@kubernetescrd
    hostname: argocd.local.bigd.no
    path: /
    pathType: Prefix
    tls: false
    extraTls:
      - hosts:
          - argocd.local.bigd.no
        secretName: local-bigd-no-tls
  metrics:
    enabled: true
    service:
      enabled: true
      labels:
        Release: kube-prometheus-stack
      annotations: {}
    serviceMonitor:
      enabled: true
      namespace: monitoring
      namespaceSelector:
        matchNames:
          - argo-cd
      additionalLabels:
        Release: kube-prometheus-stack
      interval: 30s
      scrapeTimeout: 10s

controller:
  metrics:
    enabled: true
    service:
      enabled: true
      labels:
        Release: kube-prometheus-stack
      annotations: {}
    serviceMonitor:
      enabled: true
      namespace: monitoring
      namespaceSelector:
        matchNames:
          - argo-cd
      additionalLabels:
        Release: kube-prometheus-stack
      interval: 30s
      scrapeTimeout: 10s

reposerver:
  metrics:
    enabled: true
    service:
      enabled: true
      labels:
        Release: kube-prometheus-stack
      annotations: {}
    serviceMonitor:
      enabled: true
      namespace: monitoring
      namespaceSelector:
        matchNames:
          - argo-cd
      additionalLabels:
        Release: kube-prometheus-stack
      interval: 30s
      scrapeTimeout: 10s

configs:
  cm:
    kustomize.buildOptions: '--enable-helm'
