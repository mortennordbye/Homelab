apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio-stage
  namespace: stage-portfolio
  labels:
    app: stage-portfolio
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: stage-portfolio
  template:
    metadata:
      labels:
        app: stage-portfolio
      annotations:
        container.apparmor.security.beta.kubernetes.io/portfolio: runtime/default # Constrain syscalls with AppArmor
    spec:
      automountServiceAccountToken: false # Disable auto-mount of service account token
      hostNetwork: false # Disallow host network
      hostPID: false # Disallow sharing host PID namespace
      hostIPC: false # Disallow sharing host IPC namespace
      enableServiceLinks: false # Prevent auto-injected service env vars
      securityContext:
        seccompProfile:
          type: RuntimeDefault # Use default seccomp profile.
        runAsNonRoot: true # Ensure pod does not run as root.
        runAsUser: 1000 # Run as non-root user/group ID.
        runAsGroup: 1000 # Run as non-root user/group ID.
        fsGroup: 1000 # Group ID for mounted volumes.
        fsGroupChangePolicy: "OnRootMismatch" # Apply fsGroup only if root-owned.
      containers:
        - name: portfolio
          image: ghcr.io/mortennordbye/portfolio:stage
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          securityContext:
            readOnlyRootFilesystem: true # Protect root FS from writes.
            allowPrivilegeEscalation: false # Block privilege escalation.
            privileged: false # Prevent privileged mode.
            runAsNonRoot: true # Enforce non-root execution.
            runAsUser: 1000
            runAsGroup: 1000
            capabilities:
              drop:
                - ALL # Drop all Linux capabilities.
            seccompProfile:
              type: RuntimeDefault # Enforce seccomp at container level.
          volumeMounts:
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
            - name: tmp
              mountPath: /tmp
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 256Mi
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 15
            failureThreshold: 3
      volumes:
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
        - name: tmp
          emptyDir: {}
