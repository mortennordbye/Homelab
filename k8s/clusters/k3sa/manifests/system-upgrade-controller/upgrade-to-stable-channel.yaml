# Universal k3s Upgrade Plan Template (stable channel)
#
# 1. Make sure the system-upgrade-controller is updated to the latest version
#
# â€” Plans are always present, but upgrades only happen on nodes you label.
# 2. To stage a node for upgrade, label it:
#      Control-plane (server):
#        kubectl label node <node> k3s-upgrade=server --overwrite
#      Worker (agent):
#        kubectl label node <node> k3s-upgrade=agent  --overwrite
#    Example (your cluster):
#      kubectl label node k3saca1 k3s-upgrade=agent --overwrite
#      kubectl label node k3saca2 k3s-upgrade=agent --overwrite
#      kubectl label node k3saca3 k3s-upgrade=agent --overwrite
#      kubectl label node k3sam1 k3s-upgrade=server --overwrite
#      kubectl label node k3sam2 k3s-upgrade=server --overwrite
#      kubectl label node k3sam3 k3s-upgrade=server --overwrite
#
# 3. To remove a node from upgrade rotation, remove the label:
#      kubectl label node <node> k3s-upgrade-
#    Example:
#      kubectl label node k3saca1 k3s-upgrade-
#      kubectl label node k3saca2 k3s-upgrade-
#      kubectl label node k3saca3 k3s-upgrade-
#      kubectl label node k3sam1 k3s-upgrade-
#      kubectl label node k3sam2 k3s-upgrade-
#      kubectl label node k3sam3 k3s-upgrade-
#
# 4. Verify labels:
#      kubectl get nodes --show-labels | grep k3s-upgrade
#
# 5. Watch the rollout (in another shell):
#      kubectl -n system-upgrade get plans
#      kubectl get nodes -o wide
#      watch kubectl get pods,jobs,nodes -o wide -n system-upgrade
#
# Plans will only schedule upgrades on nodes matching k3s-upgrade=server or =agent.
---
# Control-plane (server) node upgrade plan via stable channel
apiVersion: upgrade.cattle.io/v1
kind: Plan
metadata:
  name: k3s-server-channel
  namespace: system-upgrade
spec:
  concurrency: 1                         # One server at a time
  cordon: true                           # Cordon before upgrade
  serviceAccountName: system-upgrade
  nodeSelector:
    matchLabels:
      k3s-upgrade: server
  tolerations:
  - key: "node-role.kubernetes.io/control-plane"
    operator: "Exists"
    effect: "NoSchedule"
  # track latest stable k3s release
  channel: https://update.k3s.io/v1-release/channels/stable
  upgrade:
    image: rancher/k3s-upgrade           # pulls the binary matching the channel
---
# Worker (agent) node upgrade plan via stable channel
apiVersion: upgrade.cattle.io/v1
kind: Plan
metadata:
  name: k3s-agent-channel
  namespace: system-upgrade
spec:
  concurrency: 1                         # One agent at a time
  cordon: true
  serviceAccountName: system-upgrade
  nodeSelector:
    matchLabels:
      k3s-upgrade: agent
  prepare:
    image: rancher/k3s-upgrade
    args:
      - prepare
      - k3s-server-channel             # wait for control-plane prep
  drain:
    force: true                        # force-evict if needed
    skipWaitForDeleteTimeout: 60      # max 60s per pod
  upgrade:
    image: rancher/k3s-upgrade
  # track latest stable k3s release
  channel: https://update.k3s.io/v1-release/channels/stable
