services:
  vpn:
    image: ghcr.io/thrnz/docker-wireguard-pia:latest
    container_name: docker-wireguard-pia
    cap_add:
      - NET_ADMIN
    env_file:
      - .env
    volumes:
      - ./scripts/docker-wireguard-pia/update_qbt_port.sh:/scripts/update_qbt_port.sh:ro
    environment:
      - LOC=${PIA_LOC}
      - USER=${PIA_USER}
      - PASS=${PIA_PASS}
      - LOCAL_NETWORK=${PIA_LOCAL_NETWORK}
      - PORT_FORWARDING=${PIA_PORT_FORWARDING}
      - VPNDNS=${PIA_VPNDNS}
      - FIREWALL=${PIA_FIREWALL}
      - PORT_SCRIPT=${PIA_PORT_SCRIPT}
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.default.disable_ipv6=1
      - net.ipv6.conf.all.disable_ipv6=1
      - net.ipv6.conf.lo.disable_ipv6=1
    healthcheck:
      test: ["CMD-SHELL", "wg show wg0 endpoints || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "${LAN_IP}:${QBT_PORT}:${QBT_PORT}"
      - "${LAN_IP}:${PROWLARR_PORT}:${PROWLARR_PORT}"
      - "${LAN_IP}:${SONARR_PORT}:${SONARR_PORT}"
      - "${LAN_IP}:${RADARR_PORT}:${RADARR_PORT}"
      - "${LAN_IP}:${BAZARR_PORT}:${BAZARR_PORT}"
      - "${LAN_IP}:${READARR_PORT}:${READARR_PORT}"
      - "${LAN_IP}:${FLARESOLVERR_PORT}:${FLARESOLVERR_PORT}"
      - "${LAN_IP}:${TDARR_PORT}:${TDARR_PORT}"

  qbittorrent:
    image: linuxserver/qbittorrent:5.1.0
    container_name: qbittorrent
    env_file:
      - .env
    network_mode: "service:vpn"
    depends_on:
      vpn:
        condition: service_healthy
    restart: unless-stopped
    labels:
      - "deunhealth.restart.on.unhealthy=true"
    healthcheck:
      test: ["CMD-SHELL", "curl -f --connect-timeout 5 http://localhost:${QBT_PORT}/ || exit 1 && curl -f --connect-timeout 5 https://www.google.com/generate_204 || exit 1"]
      start_period: 20s
      interval: 60s
      timeout: 10s
      retries: 3
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=${QBT_PORT}
    volumes:
      - ./volumes/qbittorrent/config:/config
      - ${MEDIA_ROOT}/torrents:/torrents:rw
      # In the qBittorrent Web UI → Tools → Options → Downloads:
      #   • Save files to:        /torrents/files
      #   • Keep incomplete in:   /torrents/download
      #   • Move completed to:    /torrents/completed

  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    env_file:
      - .env
    network_mode: "service:vpn"
    depends_on:
      vpn:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./volumes/prowlarr/config:/config
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${PROWLARR_PORT}/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  sonarr:
    image: ghcr.io/linuxserver/sonarr:latest
    container_name: sonarr
    env_file:
      - .env
    network_mode: "service:vpn"
    depends_on:
      vpn:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./volumes/sonarr/config:/config
      - ${MEDIA_ROOT}/series:/tv
      - ${MEDIA_ROOT}/torrents:/torrents:ro
      - ${MEDIA_ROOT}/torrents/download:/torrents/download:rw
      - ${MEDIA_ROOT}/torrents/completed:/downloads:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${SONARR_PORT}/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  radarr:
    image: ghcr.io/linuxserver/radarr:latest
    container_name: radarr
    env_file:
      - .env
    network_mode: "service:vpn"
    depends_on:
      vpn:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./volumes/radarr/config:/config
      - ${MEDIA_ROOT}/movies:/movies
      - ${MEDIA_ROOT}/torrents:/torrents:ro
      - ${MEDIA_ROOT}/torrents/download:/torrents/download:rw
      - ${MEDIA_ROOT}/torrents/completed:/downloads:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${RADARR_PORT}/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  bazarr:
    image: ghcr.io/linuxserver/bazarr:latest
    container_name: bazarr
    env_file:
      - .env
    network_mode: "service:vpn"
    depends_on:
      vpn:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./volumes/bazarr/config:/config
      - ${MEDIA_ROOT}/series:/tv
      - ${MEDIA_ROOT}/movies:/movies
      - ${MEDIA_ROOT}/torrents:/torrents:ro
      - ${MEDIA_ROOT}/torrents/download:/torrents/download:rw
      - ${MEDIA_ROOT}/torrents/completed:/downloads:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${BAZARR_PORT}/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  readarr:
    image: ghcr.io/linuxserver/readarr:nightly
    container_name: readarr
    env_file:
      - .env
    network_mode: "service:vpn"
    depends_on:
      vpn:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./volumes/readarr/config:/config
      - ${MEDIA_ROOT}/audiobooks:/audiobooks
      - ${MEDIA_ROOT}/torrents:/torrents:ro
      - ${MEDIA_ROOT}/torrents/download:/torrents/download:rw
      - ${MEDIA_ROOT}/torrents/completed:/downloads:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${READARR_PORT}/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    env_file:
      - .env
    network_mode: "service:vpn"
    depends_on:
      vpn:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - LOG_LEVEL=info
    volumes:
      - ./volumes/flaresolverr/config:/config
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${FLARESOLVERR_PORT} || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  tdarr-server:
    image: ghcr.io/haveagitgat/tdarr:latest
    container_name: tdarr-server
    env_file:
      - .env
    network_mode: "service:vpn"
    depends_on:
      vpn:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=002
      - serverName=TdarrController
      - inContainer=true
      - internalNode=true
      - nodeName=InternalNode
    volumes:
      - ./volumes/tdarr-server/config:/app/configs
      - ./volumes/tdarr-server/logs:/app/logs
      - ${MEDIA_ROOT}/series:/media/tv
      - ${MEDIA_ROOT}/movies:/media/movies
    healthcheck:
      test: ["CMD-SHELL", "curl -f --connect-timeout 5 http://localhost:${TDARR_PORT}/api/v2/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3